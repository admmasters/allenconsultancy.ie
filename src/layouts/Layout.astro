---
export interface Props {
	title: string;
}

const { title } = Astro.props;
const pathname = new URL(Astro.request.url).pathname;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title} | Allen Consultancy</title>
		<style>
			.page-transition {
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgba(0, 0, 0, 0.3);
				opacity: 0;
				pointer-events: none;
				z-index: 9999;
				transition: opacity 0.2s ease;
			}
		</style>
	</head>
	<body>
		<div class="page-transition" id="page-transition"></div>
		<div class="container">
			<nav class="fade-in">
				<div class="logo">
					<img src="/psyclass-logo.svg" alt="Allen Consultancy" />
					<span>Allen Consultancy</span>
				</div>
				<div class="nav-links" id="nav-links">
					<a href="/" class={pathname === "/" ? "active" : ""}>About</a>
					<a href="/services" class={pathname === "/services" ? "active" : ""}>Services</a>
					<a href="/resources" class={pathname === "/resources" ? "active" : ""}>Resources</a>
					<a href="/blog" class={pathname === "/blog" ? "active" : ""}>Blog</a>
					<a href="/contact" class={pathname === "/contact" ? "active" : ""}>Contact</a>
				</div>
				<a href="/contact" class="get-in-touch pulse">Get in Touch</a>
				<div class="menu-toggle" id="menu-toggle">
					<span></span>
					<span></span>
					<span></span>
				</div>
			</nav>

			<main class="fade-up">
				<slot />
			</main>
		</div>
	</body>
</html>

<style>
	:root {
		--color-primary: #e67e22;
		--color-text: #ffffff;
		--color-dark: #333333;
		--color-light: #f5f5f5;
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html, body {
		width: 100%;
		height: 100%;
	}

	body {
		font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
		color: var(--color-dark);
		line-height: 1.5;
	}

	.container {
		min-height: 100vh;
		background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('/background.jpg');
		background-size: cover;
		background-position: center;
	}

	nav {
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1.5rem 2rem;
		position: relative;
		z-index: 1000;
	}

	.logo {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-weight: bold;
		color: var(--color-text);
	}

	.logo img {
		height: 2rem;
	}

	.nav-links {
		display: flex;
		gap: 2rem;
	}

	.nav-links a {
		color: var(--color-text);
		text-decoration: none;
		font-size: 1rem;
		transition: opacity 0.2s;
	}

	.nav-links a:hover {
		opacity: 0.8;
	}

	.get-in-touch {
		background-color: var(--color-primary);
		color: var(--color-text);
		border: none;
		padding: 0.75rem 1.5rem;
		border-radius: 4px;
		cursor: pointer;
		font-weight: 500;
		transition: background-color 0.2s;
	}

	.get-in-touch:hover {
		background-color: #d35400;
	}

	main {
		max-width: 1200px;
		margin: 0 auto;
		padding: 2rem;
		color: var(--color-text);
	}

	.menu-toggle {
		display: none;
		flex-direction: column;
		justify-content: space-between;
		width: 30px;
		height: 21px;
		cursor: pointer;
	}

	.menu-toggle span {
		display: block;
		height: 3px;
		width: 100%;
		background-color: var(--color-text);
		border-radius: 3px;
	}

	@media (max-width: 768px) {
		.nav-links, .get-in-touch {
			display: none;
		}

		.menu-toggle {
			display: flex;
		}
	}

	/* Animation styles */
	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	@keyframes fadeUp {
		from {
			opacity: 0;
			transform: translateY(20px);
		}
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	@keyframes pulse {
		0% {
			box-shadow: 0 0 0 0 rgba(230, 126, 34, 0.4);
		}
		70% {
			box-shadow: 0 0 0 10px rgba(230, 126, 34, 0);
		}
		100% {
			box-shadow: 0 0 0 0 rgba(230, 126, 34, 0);
		}
	}

	.fade-in {
		animation: fadeIn 0.4s ease-in-out forwards;
	}

	.fade-up {
		animation: fadeUp 0.4s ease-out forwards;
	}

	.pulse {
		animation: pulse 2s infinite;
	}

	.nav-links a {
		position: relative;
	}

	.nav-links a::after {
		content: '';
		position: absolute;
		width: 0;
		height: 2px;
		bottom: -4px;
		left: 0;
		background-color: var(--color-primary);
		transition: width 0.3s ease;
	}

	.nav-links a:hover::after, 
	.nav-links a.active::after {
		width: 100%;
	}

	.logo {
		transition: transform 0.3s ease;
	}

	.logo:hover {
		transform: scale(1.05);
	}

	/* Mobile menu styles */
	@media (max-width: 768px) {
		.nav-links {
			position: fixed;
			top: 0;
			right: -100%;
			width: 70%;
			height: 100vh;
			background-color: rgba(0, 0, 0, 0.9);
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			gap: 2rem;
			transition: right 0.3s cubic-bezier(0.77, 0.2, 0.05, 1.0);
			z-index: 10000;
		}

		.nav-links.show {
			right: 0;
		}

		.nav-links a {
			font-size: 1.2rem;
		}

		.get-in-touch {
			display: none;
		}

		.menu-toggle {
			display: flex;
			z-index: 10001;
		}

		.menu-toggle span {
			transition: all 0.3s cubic-bezier(0.77, 0.2, 0.05, 1.0);
		}

		.menu-toggle.active span:nth-child(1) {
			transform: translateY(9px) rotate(45deg);
		}

		.menu-toggle.active span:nth-child(2) {
			opacity: 0;
		}

		.menu-toggle.active span:nth-child(3) {
			transform: translateY(-9px) rotate(-45deg);
		}
	}
</style>

<script>
	// Mobile menu toggle script
	document.addEventListener('DOMContentLoaded', () => {
		const menuToggle = document.getElementById('menu-toggle');
		const navLinks = document.getElementById('nav-links');
		
		if (menuToggle && navLinks) {
			menuToggle.addEventListener('click', () => {
				navLinks.classList.toggle('show');
				menuToggle.classList.toggle('active');
			});

			// Close mobile menu when a link is clicked
			const navItems = navLinks.querySelectorAll('a');
			navItems.forEach(item => {
				item.addEventListener('click', () => {
					navLinks.classList.remove('show');
					menuToggle.classList.remove('active');
				});
			});
		}

		// Page transition effect
		const pageTransition = document.getElementById('page-transition');
		const links = document.querySelectorAll('a[href]:not([target="_blank"])');
		
		links.forEach(link => {
			link.addEventListener('click', (e) => {
				const href = link.getAttribute('href');
				
				// Skip transition for anchor links or non-internal links
				if (href && (href.startsWith('#') || href.startsWith('http'))) {
					return;
				}

				e.preventDefault();

				// Quick fade effect
				if (pageTransition) {
					pageTransition.style.opacity = '1';
				}
				
				// Navigate quickly
				setTimeout(() => {
					if (href) {
						window.location.href = href;
					}
				}, 150);
			});
		});

		// Fade in when page loads
		window.addEventListener('pageshow', () => {
			if (pageTransition) {
				pageTransition.style.opacity = '0';
			}
		});
	});
</script>
